/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type ProductShowcase = {
  _type: "productShowcase";
  productHandle?: string;
  displayStyle?: "card" | "banner" | "minimal";
  customNote?: string;
};

export type Article = {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  author?: string;
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ProductShowcase>;
  tags?: Array<string>;
  publishedAt?: string;
  featured?: boolean;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageType?: "landing" | "article" | "general";
  description?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  heroTitle?: string;
  heroSubtitle?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  heroButtons?: Array<{
    text?: string;
    link?: string;
    style?: "primary" | "secondary";
    _key: string;
  }>;
  features?: Array<{
    icon?: string;
    title?: string;
    description?: string;
    _key: string;
  }>;
  contactInfo?: {
    email?: string;
    phone?: string;
    address?: string;
    hours?: string;
  };
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  } | {
    _key: string;
  } & ProductShowcase>;
  publishedAt?: string;
};

export type Car = {
  _id: string;
  _type: "car";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  year?: number;
  make?: string;
  model?: string;
  trim?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  vin?: string;
  mileage?: number;
  condition?: "excellent" | "good" | "fair" | "poor" | "project";
  bodyStyle?: "sedan" | "coupe" | "hatchback" | "suv" | "truck" | "convertible" | "wagon" | "van" | "other";
  transmission?: "manual" | "automatic" | "cvt" | "semi-automatic";
  fuelType?: "gasoline" | "diesel" | "hybrid" | "electric" | "plugin-hybrid" | "other";
  drivetrain?: "fwd" | "rwd" | "awd" | "4wd";
  exteriorColor?: string;
  interiorColor?: string;
  location?: {
    city?: string;
    state?: "AL" | "AK" | "AZ" | "AR" | "CA" | "CO" | "CT" | "DE" | "FL" | "GA" | "HI" | "ID" | "IL" | "IN" | "IA" | "KS" | "KY" | "LA" | "ME" | "MD" | "MA" | "MI" | "MN" | "MS" | "MO" | "MT" | "NE" | "NV" | "NH" | "NJ" | "NM" | "NY" | "NC" | "ND" | "OH" | "OK" | "OR" | "PA" | "RI" | "SC" | "SD" | "TN" | "TX" | "UT" | "VT" | "VA" | "WA" | "WV" | "WI" | "WY";
  };
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    isMainPhoto?: boolean;
    _type: "image";
    _key: string;
  }>;
  contactInfo?: {
    firstName?: string;
    lastName?: string;
    email?: string;
    phone?: string;
    preferredContact?: "email" | "phone" | "text";
  };
  availabilityStatus?: "available" | "sold" | "not-for-sale" | "under-contract";
  price?: number;
  negotiable?: boolean;
  saleLocation?: string;
  slug?: Slug;
  featured?: boolean;
  publishedAt?: string;
  titleOverride?: string;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = ProductShowcase | Article | Page | Car | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ../web-nextjs/src/sanity/queries.ts
// Variable: carsQuery
// Query: *[_type == "car" && availabilityStatus == "available"] | order(publishedAt desc) {  ...}
export type CarsQueryResult = Array<{
  _id: string;
  _type: "car";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  year?: number;
  make?: string;
  model?: string;
  trim?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  vin?: string;
  mileage?: number;
  condition?: "excellent" | "fair" | "good" | "poor" | "project";
  bodyStyle?: "convertible" | "coupe" | "hatchback" | "other" | "sedan" | "suv" | "truck" | "van" | "wagon";
  transmission?: "automatic" | "cvt" | "manual" | "semi-automatic";
  fuelType?: "diesel" | "electric" | "gasoline" | "hybrid" | "other" | "plugin-hybrid";
  drivetrain?: "4wd" | "awd" | "fwd" | "rwd";
  exteriorColor?: string;
  interiorColor?: string;
  location?: {
    city?: string;
    state?: "AK" | "AL" | "AR" | "AZ" | "CA" | "CO" | "CT" | "DE" | "FL" | "GA" | "HI" | "IA" | "ID" | "IL" | "IN" | "KS" | "KY" | "LA" | "MA" | "MD" | "ME" | "MI" | "MN" | "MO" | "MS" | "MT" | "NC" | "ND" | "NE" | "NH" | "NJ" | "NM" | "NV" | "NY" | "OH" | "OK" | "OR" | "PA" | "RI" | "SC" | "SD" | "TN" | "TX" | "UT" | "VA" | "VT" | "WA" | "WI" | "WV" | "WY";
  };
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    isMainPhoto?: boolean;
    _type: "image";
    _key: string;
  }>;
  contactInfo?: {
    firstName?: string;
    lastName?: string;
    email?: string;
    phone?: string;
    preferredContact?: "email" | "phone" | "text";
  };
  availabilityStatus?: "available" | "not-for-sale" | "sold" | "under-contract";
  price?: number;
  negotiable?: boolean;
  saleLocation?: string;
  slug?: Slug;
  featured?: boolean;
  publishedAt?: string;
  titleOverride?: string;
}>;
// Variable: carQuery
// Query: *[_type == "car" && slug.current == $slug][0] {  ...}
export type CarQueryResult = {
  _id: string;
  _type: "car";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  year?: number;
  make?: string;
  model?: string;
  trim?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  vin?: string;
  mileage?: number;
  condition?: "excellent" | "fair" | "good" | "poor" | "project";
  bodyStyle?: "convertible" | "coupe" | "hatchback" | "other" | "sedan" | "suv" | "truck" | "van" | "wagon";
  transmission?: "automatic" | "cvt" | "manual" | "semi-automatic";
  fuelType?: "diesel" | "electric" | "gasoline" | "hybrid" | "other" | "plugin-hybrid";
  drivetrain?: "4wd" | "awd" | "fwd" | "rwd";
  exteriorColor?: string;
  interiorColor?: string;
  location?: {
    city?: string;
    state?: "AK" | "AL" | "AR" | "AZ" | "CA" | "CO" | "CT" | "DE" | "FL" | "GA" | "HI" | "IA" | "ID" | "IL" | "IN" | "KS" | "KY" | "LA" | "MA" | "MD" | "ME" | "MI" | "MN" | "MO" | "MS" | "MT" | "NC" | "ND" | "NE" | "NH" | "NJ" | "NM" | "NV" | "NY" | "OH" | "OK" | "OR" | "PA" | "RI" | "SC" | "SD" | "TN" | "TX" | "UT" | "VA" | "VT" | "WA" | "WI" | "WV" | "WY";
  };
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    isMainPhoto?: boolean;
    _type: "image";
    _key: string;
  }>;
  contactInfo?: {
    firstName?: string;
    lastName?: string;
    email?: string;
    phone?: string;
    preferredContact?: "email" | "phone" | "text";
  };
  availabilityStatus?: "available" | "not-for-sale" | "sold" | "under-contract";
  price?: number;
  negotiable?: boolean;
  saleLocation?: string;
  slug?: Slug;
  featured?: boolean;
  publishedAt?: string;
  titleOverride?: string;
} | null;
// Variable: featuredCarsQuery
// Query: *[_type == "car" && featured == true && availabilityStatus == "available"] | order(publishedAt desc)[0..2] {  ...}
export type FeaturedCarsQueryResult = Array<{
  _id: string;
  _type: "car";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  year?: number;
  make?: string;
  model?: string;
  trim?: string;
  description?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  vin?: string;
  mileage?: number;
  condition?: "excellent" | "fair" | "good" | "poor" | "project";
  bodyStyle?: "convertible" | "coupe" | "hatchback" | "other" | "sedan" | "suv" | "truck" | "van" | "wagon";
  transmission?: "automatic" | "cvt" | "manual" | "semi-automatic";
  fuelType?: "diesel" | "electric" | "gasoline" | "hybrid" | "other" | "plugin-hybrid";
  drivetrain?: "4wd" | "awd" | "fwd" | "rwd";
  exteriorColor?: string;
  interiorColor?: string;
  location?: {
    city?: string;
    state?: "AK" | "AL" | "AR" | "AZ" | "CA" | "CO" | "CT" | "DE" | "FL" | "GA" | "HI" | "IA" | "ID" | "IL" | "IN" | "KS" | "KY" | "LA" | "MA" | "MD" | "ME" | "MI" | "MN" | "MO" | "MS" | "MT" | "NC" | "ND" | "NE" | "NH" | "NJ" | "NM" | "NV" | "NY" | "OH" | "OK" | "OR" | "PA" | "RI" | "SC" | "SD" | "TN" | "TX" | "UT" | "VA" | "VT" | "WA" | "WI" | "WV" | "WY";
  };
  photos?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    isMainPhoto?: boolean;
    _type: "image";
    _key: string;
  }>;
  contactInfo?: {
    firstName?: string;
    lastName?: string;
    email?: string;
    phone?: string;
    preferredContact?: "email" | "phone" | "text";
  };
  availabilityStatus?: "available" | "not-for-sale" | "sold" | "under-contract";
  price?: number;
  negotiable?: boolean;
  saleLocation?: string;
  slug?: Slug;
  featured?: boolean;
  publishedAt?: string;
  titleOverride?: string;
}>;
// Variable: pagesQuery
// Query: *[_type == "page"] | order(publishedAt desc) {  ...}
export type PagesQueryResult = Array<{
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageType?: "article" | "general" | "landing";
  description?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  heroTitle?: string;
  heroSubtitle?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  heroButtons?: Array<{
    text?: string;
    link?: string;
    style?: "primary" | "secondary";
    _key: string;
  }>;
  features?: Array<{
    icon?: string;
    title?: string;
    description?: string;
    _key: string;
  }>;
  contactInfo?: {
    email?: string;
    phone?: string;
    address?: string;
    hours?: string;
  };
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  publishedAt?: string;
}>;
// Variable: pageQuery
// Query: *[_type == "page" && slug.current == $slug][0] {  ...}
export type PageQueryResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageType?: "article" | "general" | "landing";
  description?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  heroTitle?: string;
  heroSubtitle?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  heroButtons?: Array<{
    text?: string;
    link?: string;
    style?: "primary" | "secondary";
    _key: string;
  }>;
  features?: Array<{
    icon?: string;
    title?: string;
    description?: string;
    _key: string;
  }>;
  contactInfo?: {
    email?: string;
    phone?: string;
    address?: string;
    hours?: string;
  };
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  publishedAt?: string;
} | null;
// Variable: featuredPagesQuery
// Query: *[_type == "page" && featured == true] | order(publishedAt desc) {  ...}
export type FeaturedPagesQueryResult = Array<never>;
// Variable: landingPageQuery
// Query: *[_type == "page" && pageType == "landing"][0] {  ...}
export type LandingPageQueryResult = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  pageType?: "article" | "general" | "landing";
  description?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  heroTitle?: string;
  heroSubtitle?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  heroButtons?: Array<{
    text?: string;
    link?: string;
    style?: "primary" | "secondary";
    _key: string;
  }>;
  features?: Array<{
    icon?: string;
    title?: string;
    description?: string;
    _key: string;
  }>;
  contactInfo?: {
    email?: string;
    phone?: string;
    address?: string;
    hours?: string;
  };
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  publishedAt?: string;
} | null;
// Variable: recentArticlesQuery
// Query: *[_type == "article"] | order(publishedAt desc)[0..2] {  ...}
export type RecentArticlesQueryResult = Array<{
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  author?: string;
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  tags?: Array<string>;
  publishedAt?: string;
  featured?: boolean;
}>;
// Variable: articlesQuery
// Query: *[_type == "article"] | order(publishedAt desc) {  ...}
export type ArticlesQueryResult = Array<{
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  author?: string;
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  tags?: Array<string>;
  publishedAt?: string;
  featured?: boolean;
}>;
// Variable: articleQuery
// Query: *[_type == "article" && slug.current == $slug][0] {  ...}
export type ArticleQueryResult = {
  _id: string;
  _type: "article";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
  };
  author?: string;
  content?: Array<{
    _key: string;
  } & ProductShowcase | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: "image";
    _key: string;
  }>;
  tags?: Array<string>;
  publishedAt?: string;
  featured?: boolean;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"car\" && availabilityStatus == \"available\"] | order(publishedAt desc) {\n  ...\n}": CarsQueryResult;
    "*[_type == \"car\" && slug.current == $slug][0] {\n  ...\n}": CarQueryResult;
    "*[_type == \"car\" && featured == true && availabilityStatus == \"available\"] | order(publishedAt desc)[0..2] {\n  ...\n}": FeaturedCarsQueryResult;
    "*[_type == \"page\"] | order(publishedAt desc) {\n  ...\n}": PagesQueryResult;
    "*[_type == \"page\" && slug.current == $slug][0] {\n  ...\n}": PageQueryResult;
    "*[_type == \"page\" && featured == true] | order(publishedAt desc) {\n  ...\n}": FeaturedPagesQueryResult;
    "*[_type == \"page\" && pageType == \"landing\"][0] {\n  ...\n}": LandingPageQueryResult;
    "*[_type == \"article\"] | order(publishedAt desc)[0..2] {\n  ...\n}": RecentArticlesQueryResult;
    "*[_type == \"article\"] | order(publishedAt desc) {\n  ...\n}": ArticlesQueryResult;
    "*[_type == \"article\" && slug.current == $slug][0] {\n  ...\n}": ArticleQueryResult;
  }
}
